{"version":3,"sources":["components/NavBar.js","components/LoginForm.js","components/SignUpForm.js","pages/Login.js","components/App.js","index.js"],"names":["NavBar","setUser","onClick","fetch","method","then","r","ok","LoginForm","onLogin","useState","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","onSubmit","e","preventDefault","headers","body","JSON","stringify","json","user","err","type","id","autoComplete","placeholder","value","onChange","target","map","SignUpForm","firstName","setFirstName","lastName","setLastName","passwordConfirmation","setPasswordConfirmation","password_confirmation","first_name","last_name","Login","showLogin","setShowLogin","App","useEffect","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"kOAqBeA,MAlBf,YAA8B,IAAZC,EAAW,EAAXA,QAShB,OACE,mCACE,8BACE,wBAAQC,QAXd,WACEC,MAAM,UAAW,CAAEC,OAAQ,WAAYC,MAAK,SAACC,GACvCA,EAAEC,IACJN,EAAQ,UAQR,yBC0COO,MAvDf,YAAiC,IAAZC,EAAW,EAAXA,QACnB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAqBA,OACE,uBAAMC,SApBR,SAAsBC,GACpBA,EAAEC,iBACFH,GAAa,GACbf,MAAM,SAAU,CACdC,OAAQ,OACRkB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEd,WAAUE,eAChCR,MAAK,SAACC,GACPY,GAAa,GACTZ,EAAEC,GACJD,EAAEoB,OAAOrB,MAAK,SAACsB,GAAD,OAAUlB,EAAQkB,MAEhCrB,EAAEoB,OAAOrB,MAAK,SAACuB,GAAD,OAASZ,EAAUY,EAAIb,eAMzC,UACE,uBACEc,KAAK,OACLC,GAAG,WACHC,aAAa,MACbC,YAAY,WACZC,MAAOtB,EACPuB,SAAU,SAACd,GAAD,OAAOR,EAAYQ,EAAEe,OAAOF,UAExC,uBACEJ,KAAK,WACLC,GAAG,WACHC,aAAa,mBACbC,YAAY,WACZC,MAAOpB,EACPqB,SAAU,SAACd,GAAD,OAAON,EAAYM,EAAEe,OAAOF,UAExC,wBAAQJ,KAAK,SAAb,SAAuBZ,EAAY,aAAe,UACjDF,EACC,6BACGA,EAAOqB,KAAI,SAACR,GAAD,OACV,6BAAeA,GAANA,QAGX,SCuCKS,MAzFf,YAAkC,IAAZ5B,EAAW,EAAXA,QACpB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAO4B,EAAP,KAAkBC,EAAlB,KACA,EAAgC7B,mBAAS,IAAzC,mBAAO8B,EAAP,KAAiBC,EAAjB,KACA,EAAgC/B,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwDJ,mBAAS,IAAjE,mBAAOgC,EAAP,KAA6BC,EAA7B,KACA,EAA4BjC,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KA4BA,OACE,uBAAMC,SA3BR,SAAsBC,GACpBA,EAAEC,iBACFL,EAAU,IACVE,GAAa,GACbf,MAAM,UAAW,CACfC,OAAQ,OACRkB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBd,WACAE,WACA+B,sBAAuBF,EACvBG,WAAYP,EACZQ,UAAWN,MAEZnC,MAAK,SAACC,GACPY,GAAa,GACTZ,EAAEC,GACJD,EAAEoB,OAAOrB,MAAK,SAACsB,GAAD,OAAUlB,EAAQkB,MAEhCrB,EAAEoB,OAAOrB,MAAK,SAACuB,GAAD,OAASZ,EAAUY,EAAIb,eAMzC,UACE,uBACEc,KAAK,OACLC,GAAG,WACHC,aAAa,MACbC,YAAY,WACZC,MAAOtB,EACPuB,SAAU,SAACd,GAAD,OAAOR,EAAYQ,EAAEe,OAAOF,UAExC,uBACEJ,KAAK,OACLC,GAAG,aACHC,aAAa,MACbC,YAAY,aACZC,MAAOK,EACPJ,SAAU,SAACd,GAAD,OAAOmB,EAAanB,EAAEe,OAAOF,UAEzC,uBACEJ,KAAK,OACLC,GAAG,YACHC,aAAa,MACbC,YAAY,YACZC,MAAOO,EACPN,SAAU,SAACd,GAAD,OAAOqB,EAAYrB,EAAEe,OAAOF,UAExC,uBACEJ,KAAK,WACLC,GAAG,WACHE,YAAY,WACZC,MAAOpB,EACPqB,SAAU,SAACd,GAAD,OAAON,EAAYM,EAAEe,OAAOF,QACtCF,aAAa,qBAEf,uBACEF,KAAK,WACLC,GAAG,wBACHE,YAAY,mBACZC,MAAOS,EACPR,SAAU,SAACd,GAAD,OAAOuB,EAAwBvB,EAAEe,OAAOF,QAClDF,aAAa,qBAEf,wBAAQF,KAAK,SAAb,SAAuBZ,EAAY,aAAe,YACjDF,EACC,6BACGA,EAAOqB,KAAI,SAACR,GAAD,OACV,6BAAeA,GAANA,QAGX,SC9DKmB,MApBf,YAA6B,IAAZtC,EAAW,EAAXA,QACf,EAAkCC,oBAAS,GAA3C,mBAAOsC,EAAP,KAAkBC,EAAlB,KAEA,OACE,mCACGD,EACC,qCACE,cAAC,EAAD,CAAWvC,QAASA,IACpB,wBAAQP,QAAS,kBAAM+C,GAAa,IAApC,wBAGF,qCACE,cAAC,EAAD,CAAYxC,QAASA,IACrB,wBAAQP,QAAS,kBAAM+C,GAAa,IAApC,0BCeKC,I,EAAAA,EA3Bf,WACE,MAAwBxC,mBAAS,MAAjC,mBAAOiB,EAAP,KAAa1B,EAAb,KAWA,OATAkD,qBAAU,WAERhD,MAAM,OAAOE,MAAK,SAACC,GACbA,EAAEC,IACJD,EAAEoB,OAAOrB,MAAK,SAACsB,GAAD,OAAU1B,EAAQ0B,WAGnC,IAEEA,EAGH,qCACE,cAAC,EAAD,CAAQ1B,QAASA,IACjB,+BACE,2DANY,cAAC,EAAD,CAAOQ,QAASR,K,gBCX9BmD,EAAcC,YAAH,qSAejBC,IAASC,OACP,eAAC,IAAD,WACE,cAACH,EAAD,IACA,cAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.3edad206.chunk.js","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\n\nfunction NavBar({ setUser }) {\n  function handleLogoutClick() {\n    fetch(\"/logout\", { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n      }\n    });\n  }\n\n  return (\n    <>\n      <nav>\n        <button onClick={handleLogoutClick}>Logout</button>\n      </nav>\n    </>\n  );\n}\n\nexport default NavBar;\n","import React, { useState } from \"react\";\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        id=\"username\"\n        autoComplete=\"off\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        id=\"password\"\n        autoComplete=\"current-password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button type=\"submit\">{isLoading ? \"Loading...\" : \"Login\"}</button>\n      {errors ? (\n        <ul>\n          {errors.map((err) => (\n            <li key={err}>{err}</li>\n          ))}\n        </ul>\n      ) : null}\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\nfunction SignUpForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n        first_name: firstName,\n        last_name: lastName,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        id=\"username\"\n        autoComplete=\"off\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        id=\"first_name\"\n        autoComplete=\"off\"\n        placeholder=\"First Name\"\n        value={firstName}\n        onChange={(e) => setFirstName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        id=\"last_name\"\n        autoComplete=\"off\"\n        placeholder=\"Last Name\"\n        value={lastName}\n        onChange={(e) => setLastName(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        id=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        autoComplete=\"current-password\"\n      />\n      <input\n        type=\"password\"\n        id=\"password_confirmation\"\n        placeholder=\"Confirm Password\"\n        value={passwordConfirmation}\n        onChange={(e) => setPasswordConfirmation(e.target.value)}\n        autoComplete=\"current-password\"\n      />\n      <button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</button>\n      {errors ? (\n        <ul>\n          {errors.map((err) => (\n            <li key={err}>{err}</li>\n          ))}\n        </ul>\n      ) : null}\n    </form>\n  );\n}\n\nexport default SignUpForm;\n","import { useState } from \"react\";\nimport LoginForm from \"../components/LoginForm\";\nimport SignUpForm from \"../components/SignUpForm\";\n\nfunction Login({ onLogin }) {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <>\n      {showLogin ? (\n        <>\n          <LoginForm onLogin={onLogin} />\n          <button onClick={() => setShowLogin(false)}>Sign Up</button>\n        </>\n      ) : (\n        <>\n          <SignUpForm onLogin={onLogin} />\n          <button onClick={() => setShowLogin(true)}>Log In</button>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\n// import { Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Login from \"../pages/Login\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    //auto-login\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  if (!user) return <Login onLogin={setUser} />;\n\n  return (\n    <>\n      <NavBar setUser={setUser} />\n      <main>\n        <p>This is the Main Menu</p>\n        {/* <Switch>\n\n    </Switch> */}\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml, body {\n  margin: 0;\n}\n\nbody {\n  font-family: BlinkMacSystemFont,-apple-system,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n}\n`;\nReactDOM.render(\n  <BrowserRouter>\n    <GlobalStyle />\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}